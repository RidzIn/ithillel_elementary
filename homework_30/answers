1) Статик метод в не статик классе
2) Везде 3131 так как инкрементация идет после присвоения
3) Могут. Это статик методы не в статик калссах быть не могут.
4) Нужно создать объект класса ABC и вызвать конструктор XYZ(new ABC().new XYZ().i)
5) Будет StackOverFlow, потому что рекурсивно класс А создает класс Б.
6) Ошибка. Нестатический метод нельзя вызывать в статическом.
7) 2 1 - потому что при вызове конструктора инициализируются статические блоки, а потом нестатические.
8) D
9) AAA BBB BBB
10) methodTree - ничего не знает о классе B.
11) 2 1 3 4 3 3 - адекватного объяснения почему в конце две 3 кроме как статические блоки инициализируются лишь однажды,
я не нашел.
12) Статик блок в не статик классе.
13) 10099 2 2
14) в нон статик: имя_внешнего_класса.this.имя_переменной. в статик: Имя_внешнего_класса.имя_переменной
15) PPP PPPQQQ PPPQQQPPP
16) 21 \n  0 \n  22 \n 1
17) вложенные классы не могут иметь модификатор доступа
18) THREE ONE TWO FIVE FOUR - потому что статик инициализация идет первой
19) Да.(как я понял нужно в случае если от внешнего класса будет кто-то наследоваться)
20) Да.
21) STATIC NON-STATIC NON-STATIC STATIC
22) new OuterClass.InnerClass().i;
23) Да
24) class C extends A.B {
        public C(){
            new A().super();
        }
    }
25) Не правда.
26) с
27) Inner Class
28) 1 - так как идет наследование от класса A, не будь его был бы вывод 2.
29) 1 - полагаю потому что объекты класса B и C так и не былы созданы
30) Ниего, так как у нас просто создается объект класса X.
31) Неправда
32) BBB
33) Нет
34) 2 1
35) Статик метод в нестатик классе
36) -2 2440
37) d
38) Я предпологал, что это невозможно, ну в вопросе написали как получить доступ. По итогу меня ввели в заблуждение ((
39) Можно. Данное правило распросняется только на методы
40) Да
41) Наследуется от внутренего класса - нельзя так ))
42) Нет, только члены класса А наследуются(методы и переменные)
43) Можно, исходя из этого треда https://stackoverflow.com/questions/2400828/inner-class-within-interface
44) Имя_внещнего_класса.this.имя_переменной - для нонстатик
    Имя_внешнего_класса.имя_переменной
45) 4444 - потому что в методе show() - this, который передает переменную интерфейса, не будь его было бы 1111
46) приват вложенный класс B видно только в классе A
47) 1 3
48) с - я на листочке писал без дебага
49) ONEONE1 ONEONE2
